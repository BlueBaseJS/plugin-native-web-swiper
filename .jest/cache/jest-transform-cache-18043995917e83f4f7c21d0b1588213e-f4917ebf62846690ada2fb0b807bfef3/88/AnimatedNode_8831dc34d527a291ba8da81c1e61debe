ed9d5e279ef0ab1744aaaa2172a1a26d
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var NativeAnimatedHelper = require('../NativeAnimatedHelper');

var invariant = require('fbjs/lib/invariant');

var AnimatedNode = function () {
  function AnimatedNode() {
    (0, _classCallCheck2.default)(this, AnimatedNode);
    (0, _defineProperty2.default)(this, "__isNative", void 0);
    (0, _defineProperty2.default)(this, "__nativeTag", void 0);
  }

  (0, _createClass2.default)(AnimatedNode, [{
    key: "__attach",
    value: function __attach() {}
  }, {
    key: "__detach",
    value: function __detach() {
      if (this.__isNative && this.__nativeTag != null) {
        NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    }
  }, {
    key: "__getValue",
    value: function __getValue() {}
  }, {
    key: "__getAnimatedValue",
    value: function __getAnimatedValue() {
      return this.__getValue();
    }
  }, {
    key: "__addChild",
    value: function __addChild(child) {}
  }, {
    key: "__removeChild",
    value: function __removeChild(child) {}
  }, {
    key: "__getChildren",
    value: function __getChildren() {
      return [];
    }
  }, {
    key: "__makeNative",
    value: function __makeNative() {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    }
  }, {
    key: "__getNativeTag",
    value: function __getNativeTag() {
      NativeAnimatedHelper.assertNativeAnimatedModule();
      invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');

      if (this.__nativeTag == null) {
        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
        NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());
        this.__nativeTag = nativeTag;
      }

      return this.__nativeTag;
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      throw new Error('This JS animated node type cannot be used as native animated node');
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.__getValue();
    }
  }]);
  return AnimatedNode;
}();

module.exports = AnimatedNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkTm9kZS5qcyJdLCJuYW1lcyI6WyJOYXRpdmVBbmltYXRlZEhlbHBlciIsInJlcXVpcmUiLCJpbnZhcmlhbnQiLCJBbmltYXRlZE5vZGUiLCJfX2lzTmF0aXZlIiwiX19uYXRpdmVUYWciLCJBUEkiLCJkcm9wQW5pbWF0ZWROb2RlIiwidW5kZWZpbmVkIiwiX19nZXRWYWx1ZSIsImNoaWxkIiwiRXJyb3IiLCJhc3NlcnROYXRpdmVBbmltYXRlZE1vZHVsZSIsIm5hdGl2ZVRhZyIsImdlbmVyYXRlTmV3Tm9kZVRhZyIsImNyZWF0ZUFuaW1hdGVkTm9kZSIsIl9fZ2V0TmF0aXZlQ29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBU0E7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLHlCQUFELENBQXBDOztBQUVBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG9CQUFELENBQXpCOztJQUlNRSxZOzs7Ozs7Ozs7K0JBQ2EsQ0FBRTs7OytCQUNGO0FBQ2YsVUFBSSxLQUFLQyxVQUFMLElBQW1CLEtBQUtDLFdBQUwsSUFBb0IsSUFBM0MsRUFBaUQ7QUFDL0NMLFFBQUFBLG9CQUFvQixDQUFDTSxHQUFyQixDQUF5QkMsZ0JBQXpCLENBQTBDLEtBQUtGLFdBQS9DO0FBQ0EsYUFBS0EsV0FBTCxHQUFtQkcsU0FBbkI7QUFDRDtBQUNGOzs7aUNBQ2lCLENBQUU7Ozt5Q0FDTTtBQUN4QixhQUFPLEtBQUtDLFVBQUwsRUFBUDtBQUNEOzs7K0JBQ1VDLEssRUFBcUIsQ0FBRTs7O2tDQUNwQkEsSyxFQUFxQixDQUFFOzs7b0NBQ0E7QUFDbkMsYUFBTyxFQUFQO0FBQ0Q7OzttQ0FLYztBQUNiLFVBQUksQ0FBQyxLQUFLTixVQUFWLEVBQXNCO0FBQ3BCLGNBQU0sSUFBSU8sS0FBSixDQUFVLG1EQUFWLENBQU47QUFDRDtBQUNGOzs7cUNBQ3lCO0FBQ3hCWCxNQUFBQSxvQkFBb0IsQ0FBQ1ksMEJBQXJCO0FBQ0FWLE1BQUFBLFNBQVMsQ0FDUCxLQUFLRSxVQURFLEVBRVAsNERBRk8sQ0FBVDs7QUFJQSxVQUFJLEtBQUtDLFdBQUwsSUFBb0IsSUFBeEIsRUFBOEI7QUFDNUIsWUFBTVEsU0FBa0IsR0FBR2Isb0JBQW9CLENBQUNjLGtCQUFyQixFQUEzQjtBQUNBZCxRQUFBQSxvQkFBb0IsQ0FBQ00sR0FBckIsQ0FBeUJTLGtCQUF6QixDQUNFRixTQURGLEVBRUUsS0FBS0csaUJBQUwsRUFGRjtBQUlBLGFBQUtYLFdBQUwsR0FBbUJRLFNBQW5CO0FBQ0Q7O0FBQ0QsYUFBTyxLQUFLUixXQUFaO0FBQ0Q7Ozt3Q0FDMkI7QUFDMUIsWUFBTSxJQUFJTSxLQUFKLENBQ0osbUVBREksQ0FBTjtBQUdEOzs7NkJBQ2E7QUFDWixhQUFPLEtBQUtGLFVBQUwsRUFBUDtBQUNEOzs7OztBQUdIUSxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLFlBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IE5hdGl2ZUFuaW1hdGVkSGVscGVyID0gcmVxdWlyZSgnLi4vTmF0aXZlQW5pbWF0ZWRIZWxwZXInKTtcblxuY29uc3QgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG5cbi8vIE5vdGUodmpldXgpOiB0aGlzIHdvdWxkIGJlIGJldHRlciBhcyBhbiBpbnRlcmZhY2UgYnV0IGZsb3cgZG9lc24ndFxuLy8gc3VwcG9ydCB0aGVtIHlldFxuY2xhc3MgQW5pbWF0ZWROb2RlIHtcbiAgX19hdHRhY2goKTogdm9pZCB7fVxuICBfX2RldGFjaCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5fX2lzTmF0aXZlICYmIHRoaXMuX19uYXRpdmVUYWcgIT0gbnVsbCkge1xuICAgICAgTmF0aXZlQW5pbWF0ZWRIZWxwZXIuQVBJLmRyb3BBbmltYXRlZE5vZGUodGhpcy5fX25hdGl2ZVRhZyk7XG4gICAgICB0aGlzLl9fbmF0aXZlVGFnID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuICBfX2dldFZhbHVlKCk6IGFueSB7fVxuICBfX2dldEFuaW1hdGVkVmFsdWUoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5fX2dldFZhbHVlKCk7XG4gIH1cbiAgX19hZGRDaGlsZChjaGlsZDogQW5pbWF0ZWROb2RlKSB7fVxuICBfX3JlbW92ZUNoaWxkKGNoaWxkOiBBbmltYXRlZE5vZGUpIHt9XG4gIF9fZ2V0Q2hpbGRyZW4oKTogQXJyYXk8QW5pbWF0ZWROb2RlPiB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgLyogTWV0aG9kcyBhbmQgcHJvcHMgdXNlZCBieSBuYXRpdmUgQW5pbWF0ZWQgaW1wbCAqL1xuICBfX2lzTmF0aXZlOiBib29sZWFuO1xuICBfX25hdGl2ZVRhZzogP251bWJlcjtcbiAgX19tYWtlTmF0aXZlKCkge1xuICAgIGlmICghdGhpcy5fX2lzTmF0aXZlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgbm9kZSBjYW5ub3QgYmUgbWFkZSBhIFwibmF0aXZlXCIgYW5pbWF0ZWQgbm9kZScpO1xuICAgIH1cbiAgfVxuICBfX2dldE5hdGl2ZVRhZygpOiA/bnVtYmVyIHtcbiAgICBOYXRpdmVBbmltYXRlZEhlbHBlci5hc3NlcnROYXRpdmVBbmltYXRlZE1vZHVsZSgpO1xuICAgIGludmFyaWFudChcbiAgICAgIHRoaXMuX19pc05hdGl2ZSxcbiAgICAgICdBdHRlbXB0IHRvIGdldCBuYXRpdmUgdGFnIGZyb20gbm9kZSBub3QgbWFya2VkIGFzIFwibmF0aXZlXCInLFxuICAgICk7XG4gICAgaWYgKHRoaXMuX19uYXRpdmVUYWcgPT0gbnVsbCkge1xuICAgICAgY29uc3QgbmF0aXZlVGFnOiA/bnVtYmVyID0gTmF0aXZlQW5pbWF0ZWRIZWxwZXIuZ2VuZXJhdGVOZXdOb2RlVGFnKCk7XG4gICAgICBOYXRpdmVBbmltYXRlZEhlbHBlci5BUEkuY3JlYXRlQW5pbWF0ZWROb2RlKFxuICAgICAgICBuYXRpdmVUYWcsXG4gICAgICAgIHRoaXMuX19nZXROYXRpdmVDb25maWcoKSxcbiAgICAgICk7XG4gICAgICB0aGlzLl9fbmF0aXZlVGFnID0gbmF0aXZlVGFnO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fX25hdGl2ZVRhZztcbiAgfVxuICBfX2dldE5hdGl2ZUNvbmZpZygpOiBPYmplY3Qge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdUaGlzIEpTIGFuaW1hdGVkIG5vZGUgdHlwZSBjYW5ub3QgYmUgdXNlZCBhcyBuYXRpdmUgYW5pbWF0ZWQgbm9kZScsXG4gICAgKTtcbiAgfVxuICB0b0pTT04oKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5fX2dldFZhbHVlKCk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBbmltYXRlZE5vZGU7XG4iXX0=